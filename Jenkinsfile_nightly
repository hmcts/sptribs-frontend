#!groovy

properties([
// H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
pipelineTriggers([cron('H 8 * * 1-5')]),
parameters([
  string(name: 'SPTRIBS_FRONTEND_URL', defaultValue: 'https://sptribs-frontend.aat.platform.hmcts.net/', description: 'The URL you want to run tests against'),
  string(name: 'FUNCTIONAL_TESTS_WORKERS',
    defaultValue: '2',
    description: 'Number of workers running functional tests'),
  ])
])

@Library("Infrastructure")
import uk.gov.hmcts.contino.AppPipelineConfig

def type = "nodejs"
def product = "sptribs"
def component = "frontend"

// SAUCELABS config - configured on Jenkins
env.SAUCE_USERNAME = 'username'
env.SAUCE_ACCESS_KEY = 'privatekey'

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

static Map<String, Object> secret(String secretName, String envVariable) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   envVariable: envVariable
  ]
}

def secrets = [
  'sptribs-${env}'    :[
    secret('idam-ui-secret', 'IDAM_SECRET'),
    secret('idam-systemupdate-password', 'TEST_PASSWORD'),
    secret('citizen-user', 'CITIZEN_USERNAME'),
    secret('citizen-password', 'CITIZEN_PASSWORD'),
    secret('specialTribunals-cic-pcq-token', 'PCQ_TOKEN')
  ],
  's2s-${env}': [
    secret('microservicekey-sptribs-frontend', 'SERVICE_AUTH_SECRET')
  ]
]

def pipelineConf = new AppPipelineConfig()
pipelineConf.vaultSecrets = secrets

withNightlyPipeline(type, product, component) {
  env.TEST_URL = "https://sptribs-frontend.aat.platform.hmcts.net/?edgecaseType=CIC"
  env.SPTRIBS_FRONTEND_URL = params.FRONTEND_URL
  enableCrossBrowserTest(60)
  loadVaultSecrets(secrets)
  enableFullFunctionalTest(120)

after('test') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'coverage/**/*'
  }

  before('crossBrowserTest') {

  }
  after('crossBrowserTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'output/**/*'
  }
}
afterAlways('fullFunctionalTest') {
  publishHTML([
          allowMissing         : true,
          alwaysLinkToLastBuild: true,
          keepAll              : true,
          reportDir            : "functional-output/e2e/reports/",
          reportFiles          : 'report.html',
          reportName           : 'Sptribs Frontend Functional Test'
  ])
}
